{"version":3,"sources":["actionTypes.js","selectors.js","counterApp.js","actions.js","reducer.js","index.js"],"names":["INCREMENT","DECREMENT","RESET","getValue","state","value","App","useSelector","selectors","dispatch","useDispatch","onClick","type","actionTypes","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAaA,G,YAAY,4BACZC,EAAY,2BACZC,EAAQ,uBCFRC,EAAW,SAAAC,GAAK,OAAIA,EAAMC,O,OCwBxBC,EAhBH,WAER,IAAMD,EAAQE,YAAYC,GAEpBC,EAAWC,cAEjB,OACI,gCACKL,EAAQ,IACT,wBAAQM,QAAS,kBAAMF,ECfH,CAACG,KAAMC,KDe3B,eACA,wBAAQF,QAAS,kBAAMF,ECfH,CAACG,KAAMC,KDe3B,eACA,wBAAQF,QAAS,kBAAMF,ECfP,CAACG,KAAMC,KDevB,uBEHGC,EAdC,WAA+B,IAA9BV,EAA6B,uDAAvB,CAACC,MAAO,GAAIU,EAAW,uCAE1C,OAAOA,EAAOH,MACV,KAAKC,EACL,MAAO,CAACR,MAAOD,EAAMC,MAAM,GAC3B,KAAKQ,EACL,MAAO,CAACR,MAAOD,EAAMC,MAAM,GAC3B,KAAKQ,EACL,MAAO,CAACR,MAAO,GACf,QACI,OAAOD,ICHbY,EAAQC,YAAYH,GAE1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGNK,SAASC,eAAe,W","file":"static/js/main.78d98e68.chunk.js","sourcesContent":["export const INCREMENT = 'project/common/increment';\nexport const DECREMENT = 'project/common/decrement';\nexport const RESET = 'project/common/reset';","export const getValue = state => state.value;","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport \"./App.css\"\n\nimport * as actions from './actions';\n\nimport * as selectors from './selectors';\n\nconst App = () => {\n\n    const value = useSelector(selectors.getValue);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {value + ' '}\n            <button onClick={() => dispatch(actions.increment())}>+</button>\n            <button onClick={() => dispatch(actions.decrement())}>-</button>\n            <button onClick={() => dispatch(actions.reset())}>Reset</button>\n        </div>\n    );\n}\n\nexport default App;","import * as actionTypes from './actionTypes';\n\nexport const increment = () => ({type: actionTypes.INCREMENT});\nexport const decrement = () => ({type: actionTypes.DECREMENT});\nexport const reset = () => ({type: actionTypes.RESET});","import * as actionTypes from './actionTypes';\n\nconst reducer = (state={value: 0}, action) => {\n\n    switch(action.type) {\n        case actionTypes.INCREMENT:\n        return {value: state.value+1};\n        case actionTypes.DECREMENT:\n        return {value: state.value-1};\n        case actionTypes.RESET:\n        return {value: 0};\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './counterApp';\nimport reducer from './reducer';\n\n/* Configure store. */\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}