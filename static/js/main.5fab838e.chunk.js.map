{"version":3,"sources":["selectors.js","counterApp.js","actions.js","actionTypes.js","index.js"],"names":["getValue","state","value","App","useSelector","selectors","dispatch","useDispatch","onClick","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAaA,G,MAAW,SAAAC,GAAK,OAAIA,EAAMC,Q,OCwBxBC,EAhBH,WAER,IAAMD,EAAQE,YAAYC,GAEpBC,EAAWC,cAEjB,OACI,gCACKL,EAAQ,IACT,wBAAQM,QAAS,kBAAMF,ECfH,CAACG,KCFR,8BFiBb,eACA,wBAAQD,QAAS,kBAAMF,ECfH,CAACG,KCFR,8BFiBb,eACA,wBAAQD,QAAS,kBAAMF,ECfP,CAACG,KCFR,0BFiBT,uBGdZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5fab838e.chunk.js","sourcesContent":["export const getValue = state => state.value;","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport \"./App.css\"\n\nimport * as actions from './actions';\n\nimport * as selectors from './selectors';\n\nconst App = () => {\n\n    const value = useSelector(selectors.getValue);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {value + ' '}\n            <button onClick={() => dispatch(actions.increment())}>+</button>\n            <button onClick={() => dispatch(actions.decrement())}>-</button>\n            <button onClick={() => dispatch(actions.reset())}>Reset</button>\n        </div>\n    );\n}\n\nexport default App;","import * as actionTypes from './actionTypes';\n\nexport const increment = () => ({type: actionTypes.INCREMENT});\nexport const decrement = () => ({type: actionTypes.DECREMENT});\nexport const reset = () => ({type: actionTypes.RESET});","export const INCREMENT = 'project/common/increment';\nexport const DECREMENT = 'project/common/decrement';\nexport const RESET = 'project/common/reset';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './counterApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}